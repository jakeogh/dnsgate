#!/usr/bin/env python

import os
import subprocess

code_sep='```'

preamble='''
# dnsgate

**dnsgate** merges 3rd party [1] DNS blocking lists into `/etc/dnsmasq.conf` or `/etc/hosts` format.

While not required, [dnsmasq](https://wiki.gentoo.org/wiki/Dnsmasq) improves on conventional [/etc/hosts domain blocking](http://winhelp2002.mvps.org/hosts.htm) by enabling * blocking of domains.

For example *.google.com:

```
echo 'address=/.google.com/127.0.0.1' >> /etc/dnsmasq.conf
```
Returnins 127.0.0.1 for all google.com domains. Rather than return 127.0.0.1 and make the application chack if port 80/443/whatever is open, dnsmasq has another advantage; it can return NXDOMAIN:

```
echo 'server=/.google.com/' >> /etc/dnsmasq.conf
```
This instead returns NXDOMAIN on *.google.com. Returning NXDOMAIN instead of localhost is default in dnsmasq output mode.

Said another way, conventional `/etc/hosts` blocking can not use wildcards * and therefore someone must keep track of each subdomain / domain combination that should be blocked. This is not necessarily a problem. Even if you don't use dnsmasq, other people [1] keep track of the subdomains for you and dnsgate automatically pulls from them. If you want to block a specific domain completely, you must use dnsmasq.

With `--mode dnsmasq` (which is default) `--block-at-psl` strips domains to their "Public Second Level Domain" which is the top public domain with any subdomain stripped, removing the need to manually specify/track specific subdomains. `--block-at-psl` may block domain's you want to use, so use it with `whitelist`.

**Features:**
* **Persistent Configuration.** see `dnsgate configure --help`.
* **Wildcard Blocking.** `--block-at-psl` will block TLD's instead of individual subdomains (dnsmasq mode only).
* **System-wide.** All programs that use the local DNS resolver benefit.
* **Blacklist Caching.** Optionally cache and re-use remote blacklists (see `--no-cache` and `--cache-expire`).
* **Non-interactive.** Can be run as a periodic cron job.
* **Quickly modify your custom Lists.** Like `dnsgate whitelist projectwonderful.com` or `dnsgate blacklist cnn.com`.
* **Return NXDOMAIN.** Rather than redirect the request to 127.0.0.1, NXDOMAIN is returned. (dnsmasq mode only).
* **Return Custom IP.** `--dest-ip` allows redirection to specified IP (disables returning NXDOMAIN in dnsmasq mode).
* **Installation Support.** see install-help
* **Verbose Output.** see `dnsgate --verbose generate`
* **IDN Support.** What to block snowman? `dnsgate blacklist xn--n3h.net`
* **TLD Blocking.** Want to block Saudi Arabia? `dnsgate blacklist sa`
* **Enable/Disable Support.** `dnsgate enable` and `dnsgate disable` (dnsmasq mode only)

**TODO:**
* **Test on distros other than gentoo w/ [OpenRC](https://wiki.gentoo.org/wiki/Comparison_of_init_systems) && dnsmasq**
* **Pip install support**
* **Add tox tests**
* **Add optional DNS filtering proxy to allow hierarchical rules.**
* **Add optional bind rpz output.**
* **Make enable/disable work in `--mode hosts`**

**Dependencies:**
 - [dnsmasq](http://www.thekelleys.org.uk/dnsmasq/doc.html) (optional)
 - python3 (tested on 3.4)
 - [click](https://github.com/mitsuhiko/click)
 - [tldextract](https://github.com/john-kurkowski/tldextract)

**Install:**
```
$ git clone https://github.com/jakeogh/dnsgate.git
$ cd dnsgate
# python3 setup.py install
$ dnsgate configure --help
```
'''

post='''


**More Information:**
 - https://news.ycombinator.com/item?id=10572700
 - https://news.ycombinator.com/item?id=10369516
 - https://news.ycombinator.com/item?id=11084968

**Related Stuff:**
 - https://github.com/gaenserich/hostsblock (bash)
 - https://github.com/jdoss/dockerhole (bash)
 - http://pgl.yoyo.org/as/#unbound
 - https://github.com/longsleep/adblockrouter
 - https://github.com/StevenBlack/hosts (python)
 - https://github.com/Mechazawa/FuckFuckAdblock
 - http://surf.suckless.org/files/adblock-hosts
 - http://git.r-36.net/hosts-gen
 - https://github.com/vain/lariza
 - https://github.com/fivefilters/block-ads/wiki/There-are-no-acceptable-ads
 - https://github.com/entaopy/peerblock
 - https://github.com/conformal/adsuck


**Simple Software:**

If you find this useful you may appreciate:

 - Disabling JS and making a keybinding to enable it ([surf](http://git.suckless.org/surf/log/?h=surf-webkit2)+[tabbed](http://tools.suckless.org/tabbed/) makes this easy)
 - [musl](http://wiki.musl-libc.org/wiki/Functional_differences_from_glibc#Name_Resolver_.2F_DNS)
 - https://wiki.gentoo.org/wiki/Project:Hardened_musl/Bluedragon
 - https://github.com/lonetwin/pythonrc
 - https://news.ycombinator.com/item?id=17276362

[1]: http://winhelp2002.mvps.org/hosts.txt http://someonewhocares.org/hosts/hosts

'''

def run_command(command_list, show=False):
    os.system('rm -rf /etc/dnsgate/cache/*')
    command = b'\n$ ' + b' '.join(command_list)
    if command.startswith(b'\n$ ..'):
        command = command.replace(b'\n$ ..', b'\n$ .')
        command = command.replace(b'dnsgate/dnsgate.py', b'dnsgate')
    command = command.decode('UTF8')
    if show:
        print(' ', command)

    p = subprocess.Popen(command_list, stderr=subprocess.STDOUT)
    p_output = p.communicate()
    return


if __name__ == '__main__':
    dnsgate_help = [b'../dnsgate/dnsgate.py', b'--help']
    dnsgate_configure_help = [b'../dnsgate/dnsgate.py', b'configure', b'--help']
    dnsgate_dnsmasq_configure = [b'../dnsgate/dnsgate.py', b'configure', b'--mode', b'dnsmasq']
#   dnsmasq_example_install_help = [b'../dnsgate/dnsgate.py', b'install_help']
    dnsmasq_example = [b'../dnsgate/dnsgate.py', b'generate']
    dnsmasq_example_verbose = [b'../dnsgate/dnsgate.py', b'--verbose', b'generate']
#   dnsmasq_example_verbose_block_at_tld = [b'../dnsgate/dnsgate.py', b'--verbose', b'--block-at-psl']

    dnsgate_hosts_configure = [b'../dnsgate/dnsgate.py', b'configure', b'--mode', b'hosts']
    hosts_example_install_help = [b'../dnsgate/dnsgate.py', b'install_help']
    hosts_example = [b'../dnsgate/dnsgate.py', b'generate']
    hosts_example_verbose = [b'../dnsgate/dnsgate.py', b'--verbose', b'generate']

    print(preamble)
    print(code_sep)
    run_command(dnsgate_help, show=True)
    print(code_sep)

    print(code_sep)
    run_command(dnsgate_configure_help, show=True)
    print(code_sep)

    print(' ')
    print("**create dnsgate configuration file for --mode dnsmasq:**")
    print(' ')
    print(code_sep, end='')
    run_command(dnsgate_dnsmasq_configure, show=True)
    print(code_sep, end='')

    print(' ')
    print("**dnsmasq examples that do the same thing:**")
    print(' ')
    print(code_sep, end='')
    run_command(dnsmasq_example, show=True)
    run_command(dnsmasq_example_verbose, show=True)
    print(code_sep, end='')

#    print(' ')
#    print("**dnsmasq example with --block-at-psl:**")
#    print(' ')
#    print(code_sep, end='')
#    run_command(dnsmasq_example_verbose_block_at_tld, show=True)
#    print(code_sep, end='')

#    print(' ')
#    print("**dnsmasq install help:**")
#    print(' ')
#    print(code_sep, end='')
#    run_command(dnsmasq_example_install_help, show=True)
#    print(code_sep, end='')

    print(' ')
    print("**create dnsgate configuration file for --mode hosts:**")
    print(' ')
    print(code_sep, end='')
    run_command(dnsgate_hosts_configure, show=True)
    print(code_sep, end='')

    print(' ')
    print("**hosts examples that do the same thing:**")
    print(' ')
    print(code_sep, end='')
    run_command(hosts_example, show=True)
    run_command(hosts_example_verbose, show=True)
    print(code_sep, end='')

    print(' ')
    print("**/etc/hosts install help:**")
    print(' ')
    print(code_sep, end='')
    run_command(hosts_example_install_help, show=True)
    print(code_sep, end='')


    print(' ')
    print(post)


later = '''
# Installation

If you don't use `pipsi`, you're missing out.
Here are [installation instructions](https://github.com/mitsuhiko/pipsi#readme).

Simply run:

    $ pipsi install .

'''
